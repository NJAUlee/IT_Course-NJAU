import pygame
import os

def game_Init():
    WIDTH = 1000
    HEIGHT = 800
    FPS = 60

    WHITE = (255, 255, 255)
    GREEN = (0, 255, 0)
    RED = (255, 0, 0)
    YELLOW = (255, 255, 0)
    BLACK = (0, 0, 0)

    # initialize
    pygame.init()
    screen = pygame.display.set_mode((1000, 800))
    # title
    pygame.display.set_caption("Persuading")
    clock = pygame.time.Clock()

    # img
    # background
    background_img = pygame.image.load(os.path.join("img", "litang.jpg")).convert()
    # dingzhen
    actor_img = pygame.image.load(os.path.join("img", "dzsmoke.jpg")).convert()

WIDTH = 1000
HEIGHT = 800
FPS = 60

WHITE = (255,255,255)
GREEN = (0,255,0)
RED = (255,0,0)
YELLOW = (255,255,0)
BLACK = (0,0,0)

#initialize
pygame.init()
screen = pygame.display.set_mode((1000,800))
#title
pygame.display.set_caption("Persuading")
clock = pygame.time.Clock()

#img
#background
background_img = pygame.image.load(os.path.join("img", "litang.jpg")).convert()
#dingzhen
actor_img = pygame.image.load(os.path.join("img", "dzsmoke.jpg")).convert()

#sound
pygame.mixer.music.load(os.path.join("sound","I Got Smoke.flac"))
pygame.mixer.music.set_volume(0.4)

class Text(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((600,70))
        self.image.fill(BLACK)
        self.rect = self.image.get_rect()
        self.rect.center = (WIDTH/2, HEIGHT-180)
        self.font = pygame.font.Font(None, 25)  # Choose an appropriate font size
        #Text generated by LLM
        self.result = "Hello, I'm Dingzhen"  # Initialize the result text
        #输出⬆️

    def update(self):
        self.image.fill(WHITE)  # Fill the background again to clear old text
        x_margin = 10  # Left margin
        y_margin = 10  # Top margin
        y_offset = y_margin  # Start below the top margin

        words = [word.split(' ') for word in self.result.splitlines()]
        space = self.font.size(' ')[0]
        max_width, max_height = self.image.get_size()

        for line in words:
            x_offset = x_margin  # Start after the left margin
            for word in line:
                word_surface = self.font.render(word, True, BLACK)
                word_width, word_height = word_surface.get_size()
                if x_offset + word_width >= max_width - x_margin:
                    x_offset = x_margin  # Reset to the left margin
                    y_offset += word_height  # Start a new line
                self.image.blit(word_surface, (x_offset, y_offset))
                x_offset += word_width + space
            y_offset += word_height  # Move down to start a new line

class Dingzhen(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.transform.scale(actor_img, (68,70))
        self.rect = self.image.get_rect()
        self.rect.center = (150, HEIGHT - 180)

#input
class Input(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((600, 70))
        self.image.fill(BLACK)
        self.rect = self.image.get_rect()
        self.rect.center = (WIDTH / 2, HEIGHT - 90)  # Positioned just below the Text box
        self.font = pygame.font.Font(None, 25)
        self.text = "Please enter"  # Variable to store the input text
        #输入⬆️
        self.active = True  # Indicates if the input box is active

    def update(self):
        if self.active:
            self.image.fill(BLACK)  # Active color
        else:
            self.image.fill(BLACK)  # Inactive color
        text_surface = self.font.render(self.text, True, WHITE)
        self.image.blit(text_surface, (10, 10))  # Add some padding

    def add_character(self, char):
        if self.active:
            self.text += char

    def backspace(self):
        if self.active:
            self.text = self.text[:-1]

    def clear_text(self):
        self.text = ""

# #sprite group
# all_sprites = pygame.sprite.Group()
# text = Text()
# dz = Dingzhen()
# all_sprites.add(text)
# all_sprites.add(dz)
#
# # Add the input box to the sprite group
# input_box = Input()
# all_sprites.add(input_box)
#
# running = True
# #loop
# while running:
#     clock.tick(FPS)
#     #input
#     for event in pygame.event.get():
#         if event.type == pygame.QUIT:
#             running = False
#         elif event.type == pygame.KEYDOWN:
#             if event.key == pygame.K_RETURN:
#                 text.result = input_box.text  # 复制输入内容到 Text 实例
#                 input_box.clear_text()  # 清空输入框
#             elif input_box.active:
#                 if event.key == pygame.K_BACKSPACE:
#                     input_box.backspace()
#                 else:
#                     input_box.add_character(event.unicode)
#
#     #update
#     #Execute the update function for each object in this group
#     all_sprites.update()
#
#     #display
#     screen.fill(BLACK)
#     screen.blit(background_img, (0,0))
#     all_sprites.draw(screen)
#     #refresh
#     pygame.display.update()
#
# pygame.quit()